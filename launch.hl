/*
 * Launches Hyper IDE by including Hyper IDE's CSS file, creating
 * a wire frame, and instantiating __[hyper-ide.widgets.ide]__.
 *
 * **Notice**, almost the entirety of Hyper IDE is actually encapsulated
 in the __[hyper-ide.widgets.ide]__ extension widget.
 */





/*
 * Setting title of our page, making sure we display version number of Hyper IDE.
 */
p5.web.page.set-title:Hyper IDE





/*
 * Including main Micro CSS files, and Hyper IDE's CSS file, making sure we can refresh cache on client,
 * every time we create a new release, to avoid having "old CSS files" 'hanging'
 * in browser cache.
 *
 * We do this by applying an HTTP query parameter to our CSS inclusion element on
 * the client, which changes every time we create a new version of Hyper IDE.
 */
micro.css.include
hyper-ide.version
p5.web.include-css-file:@IDE/media/main.css?v={0}
  :x:/@hyper-ide.version?value





/*
 * Creating main Hyper IDE container widget.
 */
create-widgets
  hyper-ide.widgets.ide
    class:container-fullscreen hyper-ide-container





/*
 * Checking if client requested to open a specific file or path initially,
 * and if so, invoking file responsible for doing just that.
 */
p5.web.query.get:path
if:x:/@p5.web.query.get/*?value
  eval-x:x:/+/*
  hyper-ide.folder-explorer.select-path:x:/@p5.web.query.get/*?value
