/*
 * Invoked when a folder is selected.
 *
 * Expects [folder] being path to the selected folder.
 */





/*
 * Sanity checking arguments.
 */
micro.lambda.contract.min:x:/..
  folder:string





/*
 * Deleting any previously created edit active file object toolbars.
 */
if
  fetch:x:/0/0?value
    widget-exists:hyper-ide-active-file-object-toolbar
  delete-widget:hyper-ide-active-file-object-toolbar





/*
 * Hiding any previously shown edit file toolbars.
 */
p5.web.widgets.find
  .toolbar
micro.css.add:x:/-/*/*?value
  class:hide





/*
 * Getting folder's name.
 */
split:x:/../*/folder?value
  =:/
.folder-name
if:x:/../*/folder?value
  =:/

  /*
   * Root folder selected.
   */
  set:x:/@.folder-name?value
    src:/

else

  /*
   * Anything but root folder selected.
   */
  set:x:/@.folder-name?value
    src:x:/@split/0/-?name





/*
 * Retrieving active events that will create a plugin button for our folder.
 *
 * Making sure we check for the existence of a configuration file, and if it exists,
 * we turn OFF everything not explicitly turned on in that file.
 *
 * This allows an installation to simply create a configuration file, which will turn
 * OFF all plugins, and then explicitly grant access to whatever plugins they want to
 * turn ON. If no configuration file exists, we turn ON all plugins by default.
 */
vocabulary:~hyper-ide.folder-plugins.
if
  fetch:x:/0/0?value
    file-exists:@IDE/configuration/plugins.hl
  load-file:@IDE/configuration/plugins.hl
  for-each:x:/@vocabulary/*
    if:x:/@load-file/*/*/{0}
      :x:/@_dp/#?value
      not
      set:x:/@_dp/#





/*
 * Adding all plugin active events for current mode into [.plugins] below.
 */
.plugins
  return:x:/../*/*
for-each:x:/@vocabulary/*?value
  insert-before:x:/@.plugins/0/-
    src:x:/@_dp?value
eval-x:x:/+/*/*
add:x:/@.plugins/*(!/return)
  src
    folder:x:/../*/folder?value





/*
 * Evaluating [.plugins] lambda, which will invoke all plugin button events for us,
 * and return its result.
 */
eval:x:/@.plugins





/*
 * Adding the results of above plugin creation logic into our toolbar widget.
 *
 * Notice, the above [eval] will return the results of all plugin active events.
 */
add:x:/../*/create-widget/*/widgets
  src:x:/@eval/*





/*
 * Making sure we inject our toolbar as the first in our list of toolbars.
 */
p5.web.widgets.get-children:hyper-ide-toolbars





/*
 * Making sure we create our "Active Object" widget.
 */
eval-x:x:/+/**(/.value|/.folder-name)|/+/*/*/label/*/innerValue
create-widget:hyper-ide-active-file-object-toolbar
  after:x:/@p5.web.widgets.get-children/*/0?value
  .folder:x:/../*/folder?value
  class:strip hyper-ide-toolbar
  widgets

    /*
     * Create new file button.
     */
    button:hyper-ide-child-file
      innerValue:@"<span class=""icon-file-empty""></span>"
      title:Create a new file
      style:"margin-bottom:0;padding-left:35px;padding-right:35px;"
      onclick

        /*
         * Creating new file, asking user for name for his new file.
         */
        create-widgets
          micro.widgets.modal:hyper-ide-create-new-file-modal
            widgets
              h3
                innerValue:Name of new file
              micro.widgets.wizard-form:hyper-ide-create-new-file-form
                text:hyper-ide-new-file-name
                  info:Name
                  .data-field:name
                  placeholder:Name for your new file ...
                  onkeydown:@"if (event.keyCode == 13) {p5.$('hyper-ide-new-file-btn').raise('onclick');return false;}"
                  oninit

                    /*
                     * Setting initial focus to "Yes" button.
                     */
                    micro.page.set-focus:x:/../*/_event?value

              div
                class:right
                widgets
                  div
                    class:strip
                    style:"display:inline-block;"
                    widgets
                      button:hyper-ide-new-file-btn
                        innerValue:OK
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Serializing form data and sanity checking name of new file.
                           *
                           * Notice, we only accept a-z, 0-9, ., _ and - characters.
                           */
                          micro.widgets.wizard-form.value:hyper-ide-create-new-file-form
                          match:x:/@micro.widgets.wizard-form.value/*/name?value
                            src:regex:/^[-_a-z0-9]+\.{1}[-_a-z0-9\.]+$/i
                          if:x:/@match/*?count
                            =:int:0
                            or:x:/@match/0?name
                              =:

                            /*
                             * Not a legal name for a file.
                             */
                            micro.css.add:hyper-ide-new-file-name
                              class:error
                            micro.windows.info:Only use a-z, ., _, - and 0-9 in your name
                              class:micro-windows-info warning
                            micro.page.set-focus:hyper-ide-new-file-name
                            return

                          /*
                           * Creating our new file as a sub file of currently selected folder.
                           */
                          get-widget-property:hyper-ide-active-file-object-toolbar
                            .folder
                          save-file:{0}{1}
                            :x:/@get-widget-property/*/*?value
                            :x:/@micro.widgets.wizard-form.value/*/name?value
                            src:

                          /*
                           * Making sure we refresh our tree view.
                           */
                          add:x:/../*/micro.widgets.tree.refresh-items/*/items
                            src:x:/@get-widget-property/*/*?value
                          micro.widgets.tree.refresh-items:hyper-ide-folder-tree-browser
                            force-expand:true
                            items

                          /*
                           * Making sure we select our newly created file, and open
                           * it for editing.
                           *
                           * Notice, this is done by selecting the same tree node twice.
                           */
                          add:x:/../*/micro.widgets.tree.select-items/*/items
                            src:{0}{1}
                              :x:/@get-widget-property/*/*?value
                              :x:/@micro.widgets.wizard-form.value/*/name?value
                          micro.widgets.tree.select-items:hyper-ide-folder-tree-browser
                            items

                          /*
                           * Deleting modal widget, and giving user some feedback.
                           */
                          delete-widget:hyper-ide-create-new-file-modal

                      button
                        innerValue:Cancel
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Simply deleting modal widget
                           */
                          delete-widget:hyper-ide-create-new-file-modal

    /*
     * Create new folder button.
     */
    button:hyper-ide-child-folder
      innerValue:@"<span class=""icon-folder""></span>"
      title:Create a new folder
      style:"margin-bottom:0;"
      onclick

        /*
         * Creating new folder, asking user for name for his new folder.
         */
        create-widgets
          micro.widgets.modal:hyper-ide-create-new-folder-modal
            widgets
              h3
                innerValue:Name of new folder
              micro.widgets.wizard-form:hyper-ide-create-new-folder-form
                text:hyper-ide-new-folder-name
                  info:Name
                  .data-field:name
                  placeholder:Name for your new folder ...
                  onkeydown:@"if (event.keyCode == 13) {p5.$('hyper-ide-new-folder-btn').raise('onclick');return false;}"
                  oninit

                    /*
                     * Setting initial focus to "Yes" button.
                     */
                    micro.page.set-focus:x:/../*/_event?value

              div
                class:right
                widgets
                  div
                    class:strip
                    style:"display:inline-block;"
                    widgets
                      button:hyper-ide-new-folder-btn
                        innerValue:OK
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Serializing form data and sanity checking name of new folder.
                           *
                           * Notice, we only accept a-z, 0-9, _, . and - characters, and no capital letters.
                           *
                           * We don't accept capital letters to avoid windows/xNix confusion in paths.
                           */
                          micro.widgets.wizard-form.value:hyper-ide-create-new-folder-form
                          match:x:/@micro.widgets.wizard-form.value/*/name?value
                            src:regex:/^[-_a-z0-9\.]+$/
                          if:x:/@match/*?count
                            =:int:0
                            or:x:/@match/0?name
                              =:

                            /*
                             * Not a legal name for a folder.
                             */
                            micro.css.add:hyper-ide-new-folder-name
                              class:error
                            micro.windows.info:Only use a-z, _, ., - and 0-9 in your name
                              class:micro-windows-info warning
                            micro.page.set-focus:hyper-ide-new-folder-name
                            return

                          /*
                           * Creating our new folder as a sub folder of currently selected folder.
                           */
                          get-widget-property:hyper-ide-active-file-object-toolbar
                            .folder
                          create-folder:{0}{1}/
                            :x:/@get-widget-property/*/*?value
                            :x:/@micro.widgets.wizard-form.value/*/name?value

                          /*
                           * Making sure we refresh our tree view.
                           */
                          add:x:/../*/micro.widgets.tree.refresh-items/*/items
                            src:x:/@get-widget-property/*/*?value
                          micro.widgets.tree.refresh-items:hyper-ide-folder-tree-browser
                            force-expand:true
                            items

                          /*
                           * Making sure we select our newly created folder
                           */
                          add:x:/../*/micro.widgets.tree.select-items/*/items
                            src:{0}{1}/
                              :x:/@get-widget-property/*/*?value
                              :x:/@micro.widgets.wizard-form.value/*/name?value
                          micro.widgets.tree.select-items:hyper-ide-folder-tree-browser
                            items

                          /*
                           * Deleting modal widget, and giving user some feedback.
                           */
                          delete-widget:hyper-ide-create-new-folder-modal

                      button
                        innerValue:Cancel
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Simply deleting modal widget
                           */
                          delete-widget:hyper-ide-create-new-folder-modal

    /*
     * Rename folder button.
     */
    button:hyper-ide-rename-folder
      innerValue:@"<span class=""icon-pencil""></span>"
      style:"margin-bottom:0;"
      title:Renames your folder
      onclick

        /*
         * Renaming folder.
         */
        create-widgets
          micro.widgets.modal:hyper-ide-confirm-rename-folder
            widgets
              h3
                innerValue:New name
              micro.widgets.wizard-form:hyper-ide-rename-folder-form
                text:hyper-ide-new-folder-name
                  info:Name
                  .data-field:name
                  placeholder:New name for your folder ...
                  onkeydown:@"if (event.keyCode == 13) {p5.$('hyper-ide-rename-folder-btn').raise('onclick');return false;}"
                  oninit

                    /*
                     * Forward evaluated above.
                     */
                    .folder-name:x:/../*/.folder-name?value

                    /*
                     * Setting initial focus to "Yes" button, and setting 
                     * initial value to old name.
                     */
                    set-widget-property:x:/../*/_event?value
                      value:x:/@.folder-name?value
                    micro.page.set-focus:x:/../*/_event?value

              div
                class:right
                widgets
                  div
                    class:strip
                    style:"display:inline-block;"
                    widgets
                      button:hyper-ide-rename-folder-btn
                        innerValue:OK
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Forward evaluated above.
                           */
                          .value:x:/../*/folder?value

                          /*
                           * Serializing form, figuring out new name for folder,
                           * and changing its name.
                           */
                          micro.widgets.wizard-form.value:hyper-ide-rename-folder-form
                          split:x:/@.value?value
                            =:/
                          set:x:/@split/0/-
                          join:x:/@split/*?name
                            sep:/
                          set:x:/@join?value
                            src:/{0}/{1}/
                              :x:/@join?value
                              :x:/@micro.widgets.wizard-form.value/*/name?value
                          trim:x:/@join?value
                            chars:/
                          move-folder:x:/@.value?value
                            dest:/{0}/
                              :x:/@trim?value

                          /*
                           * Refreshing tree, and de-selecting folder.
                           */
                          join:x:/@split/*?name
                            sep:/
                          set:x:/@join?value
                            src:/{0}/
                              :x:/@join?value
                          trim-left:x:/@join?value
                            chars:/
                          add:x:/../*/micro.widgets.tree.refresh-items/*/items
                            src:/{0}
                              :x:/@trim-left?value
                          micro.widgets.tree.refresh-items:hyper-ide-folder-tree-browser
                            force-expand:bool:true
                            items
                          add:x:/../*/micro.widgets.tree.select-items/*/items
                            src:/{0}/
                              :x:/@trim?value
                          micro.widgets.tree.select-items:hyper-ide-folder-tree-browser
                            items

                          /*
                           * Deleting modal widget, and giving user some feedback.
                           */
                          delete-widget:hyper-ide-confirm-rename-folder

                      button
                        innerValue:Cancel
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Simply deleting modal widget.
                           */
                          delete-widget:hyper-ide-confirm-rename-folder

    /*
     * Delete folder button.
     */
    button:hyper-ide-delete-folder
      innerValue:@"<span class=""icon-bin""></span>"
      title:Deletes your folder
      style:"margin-bottom:0;"
      onclick

        /*
         * Forward evaluated above.
         */
        .folder-name:x:/../*/folder?value

        /*
         * Deleting folder, asking user to confirm the action.
         */
        create-widgets
          micro.widgets.modal:hyper-ide-confirm-delete-folder
            widgets
              h3
                innerValue:Confirm deletion
              literal
                element:p
                style:"float:left;font-size:5rem;margin-right:.5rem;"
                class:icon-bin
              p
                innerValue:@"Are you sure you want to delete the <code>{0}</code> folder? This will delete all files and sub-folders, 
and close all editors that are editing files inside of your folder. I need you to confirm this action before I allow you to do this."
                  :x:/@.folder-name?value
              p
                innerValue:@"<strong>Warning, this action is permanent!</strong>"
              div
                class:right
                widgets
                  div
                    class:strip
                    style:"display:inline-block;"
                    widgets
                      button
                        innerValue:Yes
                        style:"margin-bottom:0;"
                        oninit

                          /*
                           * Setting initial focus to "Yes" button.
                           */
                          micro.page.set-focus:x:/../*/_event?value

                        onclick

                          /*
                           * Figuring out which folder user is trying to delete.
                           */
                          get-widget-property:hyper-ide-active-file-object-toolbar
                            .folder

                          /*
                           * Deleting actual folder.
                           */
                          delete-folder:x:/@get-widget-property/*/*?value

                          /*
                           * Deleting selected item from tree.
                           *
                           * Notice, selected tree view item will always be the file or folder 
                           * user is trying to delete, since selecting a tree node, 
                           * changes the active file object edited.
                           */
                          micro.widgets.tree.get-selected-items:hyper-ide-folder-tree-browser
                          add:x:/../*/micro.widgets.tree.delete-items
                            src:x:/@micro.widgets.tree.get-selected-items/*
                          micro.widgets.tree.delete-items:hyper-ide-folder-tree-browser

                          /*
                           * Making sure we close all editors that are editing files beneath
                           * currently deleted folder.
                           */
                          eval-x:x:/+/*
                          hyper-ide.editors.close
                            filter:x:/@get-widget-property/*/*?value

                          /*
                           * Deleting modal window.
                           */
                          delete-widget:hyper-ide-confirm-delete-folder

                      button
                        innerValue:No
                        style:"margin-bottom:0;"
                        onclick

                          /*
                           * Simply deleting modal widget.
                           */
                          delete-widget:hyper-ide-confirm-delete-folder

    /*
     * Upload file button.
     */
    button:hyper-ide-upload-file
      innerValue:@"<span class=""icon-upload2""></span>"
      title:Upload a file
      style:"margin-bottom:0;"
      onclick:@"p5.$('hyper-ide-upload-file-input').el.click();return false;"

    /*
     * Hidden upload file dialog.
     */
    input:hyper-ide-upload-file-input
      type:file
      multiple
      style:@"opacity:0 !important;position:absolute !important;width:0;height:0;z-index:-1;top:-5000px;left:0;"
      onchange:@"p5.hyper_ide_upload_files(this.files);"
      .onrefresh

        /*
         * Forward evaluated above.
         */
        .folder-name:x:/../*/folder?value

        /*
         * Refresh our destination folder.
         */
        add:x:/../*/micro.widgets.tree.refresh-items/*/items
          src:x:/@.folder-name?value
        micro.widgets.tree.refresh-items:hyper-ide-folder-tree-browser
          force-expand:bool:true
          items

        /*
         * Giving user some feedback
         */
        p5.web.session.get:hyper-ide.uploaded-files-count
        micro.windows.info:{0} file(s) uploaded successfully
          :x:/@p5.web.session.get/*?value
          class:micro-windows-info success

      oninit

        /*
         * Forward evaluated above.
         */
        .folder-name:x:/../*/folder?value

        /*
         * Making sure we include JavaScript necessary to upload a file on page,
         * but in such a way that it's only included once, since it's the same 
         * JavaScript, for each instance of our upload dialog implementation.
         */
        p5.web.include-javascript:@"p5.hyper_ide_upload_files = function (files) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
        if (this.readyState == XMLHttpRequest.DONE) {
            if (this.status == 200) {
                p5.$('hyper-ide-upload-file-input').raise('.onrefresh');
            } else if (this.status == 500) {
                alert(this.responseText);
            }
        }
    };
    xhr.open('POST', '/hyper-ide/upload', true);
    var fd = new FormData();
    fd.append('folder', p5.hyper_ide_upload_files_folder);
    for (var i = 0; i < files.length; i++) {
        fd.append('file' + i, files[i]);
    }
    xhr.send(fd);
}"

        /*
         * Then making sure we send the JavaScript necessary to track our 
         * destination folder.
         */
        p5.web.send-javascript:@"p5.hyper_ide_upload_files_folder = '{0}';"
          :x:/@.folder-name?value
