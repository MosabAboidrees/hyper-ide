
/*
 * invoked when a folder is selected.
 */





/*
 * Sanity checking arguments.
 */
micro.lambda.contract.min:x:/..
  folder:string





/*
 * Clearing out any previously Active Object widgets.
 */
clear-widget:hyper-ide-active-object-wrapper





/*
 * Checking if this is a protected folder.
 */
if:x:/../*/folder?value
  =:/db/
  return





/*
 * Getting folder's name.
 */
split:x:/../*/folder?value
  =:/





/*
 * Making sure user is not allowed to rename or modify "protected" folders.
 */
.read-only:bool:false
.allow-empty:bool:true
.allow-child:bool:true
switch:x:/../*/folder?value
  case:/
  case:/bin/
  case:/common/
  case:/db/
  case:/users/
    set:x:/@.read-only?value
      src:bool:true
    set:x:/@.allow-empty?value
      src:bool:false
  case:/modules/
    set:x:/@.read-only?value
      src:bool:true
  default

    /*
     * Making sure user is not allowed to edit any of the system user folders.
     */
    if:x:/@split/0?name
      =:users
      and:x:/@split/*?count
        =:int:2
      or:x:/@split/*?count
        =:int:3
        and:x:/@split/2?name
          =:documents
          or:x:/@split/2?name
            =:temp
      or:x:/@split/*?count
        =:int:4
        and:x:/@split/2?name
          =:documents
          and:x:/@split/3?name
            =:private
            or:x:/@split/3?name
              =:public
      set:x:/@.read-only?value
        src:bool:true

    /*
     * Making sure user is not allowed to edit any of the system common folders.
     */
    else-if:x:/@split/0?name
      =:common
      and:x:/@split/*?count
        =:int:2
        and:x:/@split/1?name
          =:documents
          or:x:/@split/1?name
            =:temp
      or:x:/@split/*?count
        =:int:3
        and:x:/@split/2?name
          =:private
          or:x:/@split/2?name
            =:public
      set:x:/@.read-only?value
        src:bool:true

    /*
     * Making sure user is not allowed to empty any of the system user folders.
     */
    if:x:/@split/0?name
      =:users
      and:x:/@split/*?count
        =:int:2
      or:x:/@split/*?count
        =:int:3
        and:x:/@split/2?name
          =:documents
      set:x:/@.allow-empty?value
        src:bool:false

    /*
     * Making sure user is not allowed to empty any of the system common folders.
     */
    else-if:x:/@split/0?name
      =:common
      and:x:/@split/*?count
        =:int:2
        and:x:/@split/1?name
          =:documents
      set:x:/@.allow-empty?value
        src:bool:false

/*
 * Making sure user is not allowed to create children in any of the system user folders.
 */
if:x:/@split/0?name
  =:users
  and:x:/@split/*?count
    =:int:1
  set:x:/@.allow-child?value
    src:bool:false





/*
 * Checking if above logic made folder read-only.
 */
if:x:/@.read-only?value
  =:bool:true
  add:x:/../*/create-widget/*/*/*/*(/input/=hyper-ide-folder-name|/button(/=hyper-ide-rename-folder|/=hyper-ide-delete-folder))
    src
      disabled
if:x:/@.allow-empty?value
  =:bool:false
  add:x:/../*/create-widget/*/*/*/*/button/=hyper-ide-empty-folder
    src
      disabled
if:x:/@.allow-child?value
  =:bool:false
  add:x:/../*/create-widget/*/*/*/*/button/=hyper-ide-child-folder
    src
      disabled





/*
 * Making sure we create our "Active Object" widget.
 */
create-widget:hyper-ide-active-object
  parent:hyper-ide-active-object-wrapper
  .folder:x:/../*/folder?value
  widgets
    div
      class:strip fill
      widgets
        label
          innerValue:Name
        input:hyper-ide-folder-name
          type:text
          placeholder:Name ...
          value:x:/@split/0/-?name
          onkeydown:@"if (event.keyCode == 13) {p5.$('hyper-ide-rename-folder').raise('onclick');return false;}"
          oninit

            /*
             * Setting initial focus to name widget.
             */
            micro.page.set-focus:x:/../*/_event?value

        button:hyper-ide-rename-folder
          innerValue:@"<span class=""icon-pencil""></span>"
          title:Renames your folder
          onclick

            /*
             * Renaming folder.
             */

        button:hyper-ide-delete-folder
          innerValue:@"<span class=""icon-bin""></span>"
          title:Deletes your folder
          onclick

            /*
             * Deleting folder, asking user to confirm the action.
             */
            create-widgets
              micro.widgets.modal:hyper-ide-confirm-delete-folder
                widgets
                  h3
                    innerValue:Confirm action
                  p
                    innerValue:Are you sure you want to delete this folder? This action is permanent!
                  div
                    class:right
                    widgets
                      div
                        class:strip
                        style:"display:inline-block;"
                        widgets
                          button
                            innerValue:Yes
                            style:"margin-bottom:0;"
                            oninit

                              /*
                               * Setting initial focus to "Yes" button.
                               */
                              micro.page.set-focus:x:/../*/_event?value

                            onclick

                              /*
                               * Deleting folder, updating treeview, and closing modal window.
                               */
                              get-widget-property:hyper-ide-active-object
                                .folder
                              delete-folder:x:/-/*/*?value
                              micro.widgets.tree.delete-selected-items:hyper-ide-folder-tree-browser
                              delete-widget:hyper-ide-confirm-delete-folder

                              /*
                               * Giving user some feedback.
                               */
                              micro.windows.info:Folder was successfully deleted
                                class:micro-windows-info success

                              /*
                               * Making sure we empty "Active object" widget, since active object
                               * is now (obviously) deleted.
                               */
                              clear-widget:hyper-ide-active-object-wrapper

                          button
                            innerValue:No
                            style:"margin-bottom:0;"
                            onclick

                              /*
                               * Simply deleting modal widget.
                               */
                              delete-widget:hyper-ide-confirm-delete-folder


        button:hyper-ide-empty-folder
          innerValue:@"<span class=""icon-cross""></span>"
          title:Empties your folder
          onclick

            /*
             * Emptying folder, which implies deleting all files and folders inside of it.
             */
            create-widgets
              micro.widgets.modal:hyper-ide-confirm-empty-folder
                widgets
                  h3
                    innerValue:Confirm action
                  p
                    innerValue:Are you sure you want to empty this folder? This action is permanent!
                  div
                    class:right
                    widgets
                      div
                        class:strip
                        style:"display:inline-block;"
                        widgets
                          button
                            innerValue:Yes
                            style:"margin-bottom:0;"
                            oninit

                              /*
                               * Setting initial focus to "Yes" button.
                               */
                              micro.page.set-focus:x:/../*/_event?value

                            onclick

                              /*
                               * Emptying folder, updating treeview, and closing modal window.
                               */
                              get-widget-property:hyper-ide-active-object
                                .folder

                              /*
                               * Deleting folders inside of folder.
                               */
                              list-folders:x:/@get-widget-property/*/*?value
                              delete-folder:x:/-/*?name

                              /*
                               * Deleting files inside of folder.
                               */
                              list-files:x:/@get-widget-property/*/*?value
                              delete-file:x:/-/*?name

                              /*
                               * Deleting children of selected tree items.
                               */
                              micro.widgets.tree.delete-selected-items-children:hyper-ide-folder-tree-browser
                              delete-widget:hyper-ide-confirm-empty-folder

                              /*
                               * Giving user some feedback.
                               */
                              micro.windows.info:Folder was successfully emptied
                                class:micro-windows-info success

                          button
                            innerValue:No
                            style:"margin-bottom:0;"
                            onclick

                              /*
                               * Simply deleting modal widget.
                               */
                              delete-widget:hyper-ide-confirm-empty-folder

        button:hyper-ide-child-folder
          innerValue:@"<span class=""icon-plus""></span>"
          title:Creates a child folder
          onclick

            /*
             * Creating child folder.
             */

