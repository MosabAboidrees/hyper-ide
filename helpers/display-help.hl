/*
 * File responsible for displaying help.
 *
 * Notice, these help files are in general terms created a Hyperlambda files, to 
 * make them "interactive", such that they can contain macros, and other things,
 * that somehow modifies the state of Hyper IDE, or in any other ways "interact"
 * with Hyper IDE.
 *
 * Making sure we check for existence of widget first though, and deleting it, to
 * easily allow user to "re-open" help, if it's already open.
 */
if
  fetch:x:/0/0?value
    widget-exists:hyper-ide-help-wrapper
  delete-widget:hyper-ide-help-wrapper
create-widget:hyper-ide-help-wrapper
  parent:hyper-ide-content-wrapper
  class:col-100
  style:"margin-top:.5rem;position:relative;"
  widgets
    container:hyper-ide-help-content
      class:air-inner shaded rounded
      oninit
      
        /*
         * Loading "index.hl", which is our "help landing page file".
         */
        hyper-ide.help.display-file:@IDE/helpers/help-files/index.hl

      events

        /*
         * Event responsible for loading Hyperlambda interactive help file.
         */
        hyper-ide.help.display-file

          /*
           * Checking file type first.
           */
          if
            ends-with:x:/../*/_arg?value
              src:.hl

            /*
             * Loading specified Hyperlambda file.
             */
            load-file:x:/../*/_arg?value
            add:x:/@load-file/*/*
              src
                parent:hyper-ide-help-content
            add:x:/..if/*/create-widgets
              src:x:/@load-file/*/*

            /*
             * Clearing old widget, before we load new widgets.
             */
            clear-widget:hyper-ide-help-content
            create-widgets

          else

            /*
             * Loading specified Markdown file, and converting it into HTML.
             */
            load-file:x:/../*/_arg?value
            markdown2html:x:/@load-file/*?value

            /*
             * Making sure we transform all YouTube links, such that they're replaced by
             * a preview of the video.
             */
            html2lambda:x:/@markdown2html?value
            for-each:x:@"/@html2lambda/*/p/*/#text/""=:regex:/^https:\\/\\/www.youtube.com\\/watch/"""

              /*
               * Replacing entire paragraph with a preview of YouTube video.
               */
              split:x:/@_dp/#?value
                =:?v=
              split:x:/@split/0/-?name
                =:&
              eval-x:x:/+/**/\@src
              insert-before:x:/@_dp/#/.
                src
                  div
                    @class:hyper-ide-youtube-outer-wrapper
                    div
                      @class:hyper-ide-youtube-wrapper
                      iframe
                        @type:text/html
                        @class:hyper-ide-youtube-embed
                        @allowfullscreen
                        @src:@"https://www.youtube.com/embed/{0}?modestbranding=1&autohide=1&showinfo=0"
                          :x:/@split/0?name
              set:x:/@_dp/#/.

            /*
             * Making sure we transform all images linked to in paragraphs, such that they're replaced by
             * an img HTML tag.
             */
            for-each:x:@"/@html2lambda/*/p/*/#text/""=:regex:/^https{0,1}:\\/\\/.+\\.[png|jpg|jpeg|gif]/i"""

              /*
               * Replacing entire paragraph with an image tag.
               */
              eval-x:x:/+/*/*/*
              insert-before:x:/@_dp/#/.
                src
                  img
                    @class:hyper-ide-help-image
                    @src:x:/@_dp/#?value
                    alt:Image
              set:x:/@_dp/#/.

            /*
             * Clearing old widget, before we create our new widget, 
             * wrapping the HTML from Markdown file.
             */
            clear-widget:hyper-ide-help-content
            lambda2html:x:/@html2lambda/*
            create-widget
              parent:hyper-ide-help-content
              element:div
              innerValue:x:/@lambda2html?value

          /*
           * Making sure we store the file reference, in case user wants to edit the
           * currently viewed file.
           */
          p5.io.unroll-path:x:/../*/_arg?value
          set-widget-property:hyper-ide-help-content
            .file:x:/@p5.io.unroll-path?value

          /*
           * Creating our common "go to index.hl" button, unless this is our "index.hl" file.
           */
          if
            ends-with:x:/../*/_arg?value
              src:/index.hl
            not

            /*
             * This is not our "index.hl" file, making sure we make it easy for user
             * to go back to "index.hl".
             */
            create-widget
              parent:hyper-ide-help-content
              element:a
              href:#
              class:hyper-ide-help-index-button
              innerValue:Back to index
              onclick

                /*
                 * Loading and displaying "index.hl" file.
                 */
                hyper-ide.help.display-file:@IDE/helpers/help-files/index.hl

          /*
           * Scrolling browser to the bottom.
           */
          p5.web.send-javascript:@"p5.$('hyper-ide-help-wrapper').el.scrollIntoView ({behavior:'smooth', block:'start'});"

          /*
           * Creating our "edit file" button.
           */
          create-widget
            parent:hyper-ide-help-content
            element:a
            href:#
            class:hyper-ide-edit-help-file-button
            innerValue:@"<span class=""icon-pencil""></span>"
            title:Edits the current help file
            onclick

              /*
               * Allowing user to edit the file.
               */
              p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                .file
              get-widget-property:x:/-/*/*?value
                .file
              eval-x:x:/+/*
              micro.evaluate.file:@IDE/helpers/open-path.hl
                path:x:/@get-widget-property/*/*?value
              p5.web.send-javascript:@"p5.$('hyper-ide-file-editor').el.scrollIntoView ({behavior:'instant'});"

          /*
           * Creating our "edit file" button.
           */
          create-widget
            parent:hyper-ide-help-content
            element:a
            href:#
            class:hyper-ide-refresh-help
            innerValue:@"<span class=""icon-spinner11""></span>"
            title:Reloads the current help file
            onclick

              /*
               * Allowing user to edit the file.
               */
              p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                .file
              get-widget-property:x:/-/*/*?value
                .file
              hyper-ide.help.display-file:x:/-/*/*?value

          /*
           * Creating our "close help" button.
           */
          create-widget
            parent:hyper-ide-help-content
            element:a
            href:#
            class:hyper-ide-close-help-button
            innerValue:@"<span class=""icon-cross""></span>"
            title:Close help
            onclick

              /*
               * Deleting entire "help widget".
               */
              delete-widget:hyper-ide-help-wrapper

      widgets
