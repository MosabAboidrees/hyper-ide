/*
 * Retrieves all files and folders beneath the specified __[folder]__,
 * and returns these to caller.
 */





/*
 * Sanity checking arguments.
 */
micro.lambda.contract.min:x:/..
  folder:string





/*
 * Lists all folders beneath specified [folder], and iterates through them,
 * making sure we return one item for each.
 */
list-folders:x:/../*/folder?value
for-each:x:/@list-folders/*?name

  /*
   * Figuring out name of folder, and making sure we create one return value for it.
   */
  split:x:/@_dp?value
    =:/
  add:x:/../*/return
    src:@"{0}:{1}"
      :x:/@split/0/-?name
      :x:/@_dp?value

  /*
   * Skipping "/db/" folder, since it's illegal to browse.
   */
  if:x:/@_dp?value
    =:/db/
    continue

  /*
   * Checking if currently iterated folder is a "leaf folder", meaning having no
   * children folders and files of its own.
   *
   * This is important since it modifies the CSS class of the item in our TreeView.
   */
  .leaf:bool:false
  try

    /*
     * Checking if folder has any children folders.
     */
    list-folders:x:/@_dp?value
    if:x:/@list-folders/*
      not

      /*
       * Then checking if it has any files.
       */
      list-files:x:/@_dp?value
      if:x:/-/*
        not
        set:x:/@.leaf?value
          src:bool:true

  catch

    /*
     * Since user doesn't have read access to folder, we default it to a leaf folder.
     */
    set:x:/.leaf?value
      src:bool:true
  /*
   * Checking if anything above made our folder to a "leaf" folder.
   */
  if:x:/@.leaf?value
    add:x:/../*/return/0/-
      src
        class:tree-leaf





/*
 * Then listing all files beneath currently iterated folder, and making sure
 * we return one item for each file.
 */
list-files:x:/../*/folder?value
for-each:x:/@list-files/*?name

  /*
   * Figuring out name of file, and making sure we create one return value for it.
   */
  split:x:/@_dp?value
    =:/
  add:x:/../*/return
    src:@"{0}:{1}"
      :x:/@split/0/-?name
      :x:/@_dp?value

  /*
   * Making sure we return file as a file, and not a folder.
   */
  add:x:/../*/return/0/-
    src
      class:file tree-leaf





/*
 * Returning items to caller.
 */
return