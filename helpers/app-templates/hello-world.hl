/*
 * Template for "new module plugin" button.
 *
 * Creates a simple "Hello World" application.
 * Requires [name] as name of new module to create.
 */





/*
 * Sanity checking arguments.
 */
micro.lambda.contract.min:x:/..
  name:string





/*
 * Creates our new module.
 *
 * First making sure our main module folder exists.
 */
create-folder:/modules/{0}/
  :x:/../*/name?value





/*
 * Then creating our module's files, first the "launch.hl" file.
 */
save-file:/modules/{0}/launch.hl
  :x:/../*/name?value
  src:@"
/*
 * Includes CSS for our module.
 */
micro.page.minify-and-bundle-css-file
  @MICRO/media/main.css
  @MICRO/media/fonts.css
  @MICRO/media/skins/serious.css
p5.web.include-css-file:x:/-?value





/*
 * Creating main wire frame for module.
 */
create-widget
  class:container
  widgets
    div
      class:row
      widgets
        div
          class:col-100
          widgets
            div
              class:right
              widgets
                div
                  class:strip toolbar
                  style:""display:inline-block;""
                  widgets
                    button
                      innerValue:@""<span class=""""icon-home3""""></span>""
                      onclick

                        /*
                         * Redirecting user to server's root URL.
                         */
                        p5.web.get-root-location
                        p5.web.set-location:x:/-?value
        div
          class:col-100
          widgets
            div
              class:air-inner shaded rounded bg
              widgets
                h3
                  innerValue:Hello World
                p
                  innerValue:@""Here is a template for your convenience, creating a default startup module wire frame for you.
It contains 4 files.""
                ul
                  widgets
                    li
                      innerValue:<code>'launch.hl'</code> - This is the file that is evaluated when your module is launched
                    li
                      innerValue:<code>'desktop.hl'</code> - This creates a 'desktop icon' for your module
                    li
                      innerValue:<code>'startup.hl'</code> - Evaluated when the server is started
                    li
                      innerValue:<code>'uninstall.hl'</code> - Evaluated when your module is uninstalled, normally it should do the 'opposite' of your startup.hl file
                button:foo-button
                  innerValue:Click me!
                  onclick
                    set-widget-property:foo-button
                      innerValue:Hello World
"





/*
 * Then creating our "desktop.hl" file.
 */
save-file:/modules/{0}/desktop.hl
  :x:/../*/name?value
  src:@"
/*
 * Desktop widget.
 *
 * This becomes your module's 'desktop icon'.
 */
container
  element:a
  class:desktop-app shaded rounded air-inner
  title:This module says Hello World!
  widgets
    span
      class:desktop-app-name
      widgets
        literal
          element:span
          class:icon-happy desktop-app-icon
        span
          class:desktop-app-text
          innerValue:Hello
"





/*
 * Then creating our "startup.hl" file.
 */
to-upper:x:/../*/name?value
save-file:/modules/{0}/startup.hl
  :x:/../*/name?value
  src:@"
/*
 * Provide whatever startup logic your module requires here, if any.
 *
 * For instance, create Active Events necessary to wire up your module.
 * Below is an example of creating a 'path' event for instance, which unrolls
 * the path declaration of @YOUR-APP-NAME to your module's main folder.
 */
split:x:/..?name
  =:/
set:x:/@split/0/-
join:x:/@split/*?name
  sep:/
eval-x:x:/+/*
create-event:p5.io.unroll-path.@{0}
  return:/{{0}}
    :x:/@join?value
"
    :x:/@to-upper?value





/*
 * Then creating our "uninstall.hl" file.
 */
save-file:/modules/{0}/uninstall.hl
  :x:/../*/name?value
  src:@"
/*
 * Provide whatever uninstall logic your module requires here, if any.
 *
 * Common tasks for this file, is to delete all Active Events created by
 * your module, such as the following example illustrates.
 */
delete-event:p5.io.unroll-path.@{0}
"
    :x:/@to-upper?value
