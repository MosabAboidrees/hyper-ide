
/*
 * Responsible for handling upload requests.
 */





/*
 * Sanity checking arguments.
 */
micro.lambda.contract.min:x:/..
  files





/*
 * Retrieving selected folder, and making sure user has selected a folder.
 */
hyper-ide.folder-explorer.get-active-item
if
  ends-with:x:/@hyper-ide.folder-explorer.get-active-item?value
    src:/
  not

  /*
   * Oops, user hasn't selected a folder.
   * Warning user and returning early.
   */
  micro.windows.info:You must select a folder to be able to upload files
    class:micro-windows-info warning
  return





/*
 * Iterating through each file in request.
 */
for-each:x:/../*/files/*

  /*
   * Checking if file already exists from before, at which point we delete it.
   *
   * This makes sure an upload request will always overwrite existing files with
   * the same name(s).
   */
  if
    fetch:x:/0/0?value
      file-exists:{0}{1}
        :x:/@hyper-ide.folder-explorer.get-active-item?value
        :x:/@_dp/#/*/original-filename?value

    /*
     * Destination file already exists, making sure we delete it.
     */
    delete-file:{0}{1}
      :x:/@hyper-ide.folder-explorer.get-active-item?value
      :x:/@_dp/#/*/original-filename?value

  /*
   * Moving file from temporary folder to destination folder.
   */
  move-file:x:/@_dp/#?value
    dest:{0}{1}
      :x:/@hyper-ide.folder-explorer.get-active-item?value
      :x:/@_dp/#/*/original-filename?value





/*
 * Refresh our destination folder.
 */
hyper-ide.folder-explorer.refresh-active-folder





/*
 * Providing some feedback to user.
 */
micro.windows.info:{0} files successfully uploaded
  :x:/../*/files/*?count
  class:micro-windows-info success
