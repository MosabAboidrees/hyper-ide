/*
 * Create our create new module plugin.
 *
 * This button is only visible if the currently selected folder is the "/modules/" folder.
 */
create-event:hyper-ide.folder-plugins.create-module

  /*
   * Verifying we're in our "/modules/" folder, and if not, returning early.
   *
   * This is to prevent this plugin to be visible in any other folders than our "/modules/" folder.
   */
  if:x:/../*/folder?value
    !=:/modules/
    return

  /*
   * Returning plugin button to caller.
   */
  return
    button
      innerValue:@"<span class=""icon-plus""></span>"
      style:"margin-bottom:0;"
      title:Create new module (new project, kind of)
      onclick
      
        /*
         * Showing a modal window, asking user to supply a name for his project.
         */
        create-widgets
          micro.widgets.modal:hyper-ide-new-module-modal
            widgets
              h3
                innerValue:Create new module
              p
                innerValue:@"Provide a name for your module, such as <code>foo-bar</code>, which also will become its URL.
Then choose a template type for your app."
              micro.widgets.wizard-form
                text
                  info:Name
                  .data-field:name
                  onkeydown:@"if (event.keyCode == 13) {p5.$('hyper-ide-create-module-button').raise('onclick');return false;}"
                  oninit

                    /*
                     * Setting initial focus to "name" textbox.
                     */
                    micro.page.set-focus:x:/../*/_event?value

                select:hyper-ide-new-module-template-type
                  info:Type
                  .data-field:type
                  onchange

                    /*
                     * Re-databinding settings for module type.
                     */
                    hyper-ide.new-module.template-type-changed

                  oninit

                    /*
                     * Creating one option element for each app-template that exists in installation.
                     */
                    list-files:@IDE/helpers/app-templates/
                      filter:.hl
                    for-each:x:/@list-files/*?name
                      split:x:/@_dp?value
                        =:/
                        =:.
                      if:x:/@split/0/-2?name
                        =:hello-world
                        add:x:/..for-each/*/create-widget
                          src:selected
                      create-widget
                        parent:x:/../*/_event?value
                        element:option
                        value:x:/@_dp?value
                        innerValue:x:/@split/0/-2?name

                    /*
                     * Invoking our "databind template type" event initially.
                     */
                    hyper-ide.new-module.template-type-changed

                  events

                    /*
                     * Invoked when the template type is changed.
                     *
                     * Rebinds the template options widget.
                     */
                    hyper-ide.new-module.template-type-changed

                      /*
                       * Retrieving the select list's selected value, and databinding
                       * the "template type settings" accordingly.
                       *
                       * But first, clearing any previously created additional settings, for
                       * previously selected template types.
                       */
                      clear-widget:hyper-ide-new-module-template-settings
                      get-widget-property:hyper-ide-new-module-template-type
                        value
                      load-file:x:/@get-widget-property/*/*?value
                      if:x:/@load-file/*/*/.settings

                        /*
                         * Selected template type contains additional settings.
                         */
                        add:x:/./*/create-widget/*/widgets
                          src:x:/@load-file/*/*/.settings/*
                        create-widget
                          parent:hyper-ide-new-module-template-settings
                          widgets

                hr
                container:hyper-ide-new-module-template-settings

                div
                  class:right
                  widgets
                    div
                      class:strip
                      style:"display:inline-block;"
                      widgets
                        button:hyper-ide-create-module-button
                          innerValue:Create
                          style:"margin-bottom:0;"
                          onclick

                            /*
                             * Creating a new default "empty module", with all the relevant base files,
                             * necessary to tie things up.
                             *
                             * But first verifying the name of the module is something we can accept.
                             */
                            micro.form.serialize:hyper-ide-new-module-modal
                            match:x:/@micro.form.serialize/*/name?value
                              src:regex:/^[-a-z_0-9]{3,}$/
                            if:x:/@match/*?count
                              =:int:0

                              /*
                               * Not a valid module name, informing user, and returning early.
                               */
                              micro.windows.info:Only use a-z, 0-9, _ or - characters, and use at least 3 characters.
                                class:micro-windows-info warning
                              return

                            /*
                             * Checking if a module with the same exists from before.
                             */
                            if
                              fetch:x:/0/0?value
                                folder-exists:/modules/{0}/
                                  :x:/@micro.form.serialize/*/name?value

                              /*
                               * Not a valid module name, informing user, and returning early.
                               */
                              micro.windows.info:That module exists from before
                                class:micro-windows-info warning
                              return


                            /*
                             * Invoking file responsible for creating user's selected module type,
                             * which depends upon which application template type user has selected.
                             */
                            add:x:/+
                              src:x:/@micro.form.serialize/*(!/type)
                            micro.evaluate.file:x:/@micro.form.serialize/*/type?value


                            /*
                             * Evaluating startup file, if it exists.
                             */
                            if
                              fetch:x:/0/0?value
                                file-exists:/modules/{0}/startup.hl
                                  :x:/@micro.form.serialize/*/name?value
                              micro.evaluate.file:/modules/{0}/startup.hl
                                :x:/@micro.form.serialize/*/name?value


                            /*
                             * Deleting modal window, refreshing treeview, and informing user.
                             */
                            delete-widget:hyper-ide-new-module-modal
                            micro.windows.info:Your module was successfully created
                              class:micro-windows-info success
                            micro.widgets.tree.refresh-items:hyper-ide-folder-tree-browser
                              items
                                /modules/

                            /*
                             * Immediately start editing our "launch.hl" file, which we'll need to
                             * to by first selecting module's folder (to expand it), and then selecting
                             * module's "launch.hl" file.
                             */
                            add:x:/+/*/items
                              src:/modules/{0}/
                                :x:/@micro.form.serialize/*/name?value
                            micro.widgets.tree.toggle-items:hyper-ide-folder-tree-browser
                              force-expand:true
                              items
                            add:x:/+/*/items
                              src:/modules/{0}/launch.hl
                                :x:/@micro.form.serialize/*/name?value
                            micro.widgets.tree.select-items:hyper-ide-folder-tree-browser
                              items

                        button
                          innerValue:Close
                          style:"margin-bottom:0;"
                          onclick

                            /*
                             * Simply deletes modal widget.
                             */
                            delete-widget:hyper-ide-new-module-modal
